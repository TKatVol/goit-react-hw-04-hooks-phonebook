{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","hooks/useLocalStorage.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","resetForm","handleChange","event","currentTarget","value","preventDefault","className","s","form","label","type","pattern","required","autoComplete","placeholder","onChange","input","button","Filter","filter","text","ContactList","contacts","onDeleteContact","list","map","id","item","style","fontSize","contact","onClick","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","visibleContacts","toLowerCase","includes","require","generate","find","toast","error","icon","theme","success","contactId","warn","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0e996a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2icmI\",\"text\":\"Filter_text__1yZUq\",\"input\":\"Filter_input__R14-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2HlZ6\",\"label\":\"ContactForm_label__Y8yzP\",\"input\":\"ContactForm_input__3EKxr\",\"button\":\"ContactForm_button__EMgEn\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../ContactForm/ContactForm.module.css';\r\n\r\nexport function ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        onSubmit(name, number);\r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <label className={s.label}> Name </label>\r\n            <input type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                required\r\n                autoComplete=\"off\"\r\n                placeholder=\"James Smith\"\r\n                onChange={handleChange}\r\n                className={s.input}\r\n            />\r\n\r\n            <label className={s.label}> Number </label>\r\n            <input type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                required\r\n                autoComplete=\"off\"\r\n                placeholder=\"007-007\"\r\n                onChange={handleChange}\r\n                className={s.input}\r\n            />\r\n\r\n            <button type=\"submit\" className={s.button}>Add contact</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from '../Filter/Filter.module.css';\r\n\r\nexport function Filter({ value, onChange }) {\r\n    return (\r\n        <div className={s.filter}>\r\n            <p className={s.text}>Find contacts by name</p>\r\n            <input type=\"text\"\r\n                name=\"name\"\r\n                value={value}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Start typing to find..\"\r\n                onChange={onChange}\r\n                className={s.input}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\n\r\nimport s from '../ContactList/ContactList.module.css';\r\n\r\nexport function ContactList({ contacts, onDeleteContact }) {\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className={s.item}>\r\n                    <FcPhoneAndroid style={{ fontSize: \"30\" }} />\r\n                    <p className={s.contact}>{name}: {number}</p>\r\n                    <button onClick={() => onDeleteContact(id)} className={s.button}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n","import { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FcConferenceCall, FcContacts } from \"react-icons/fc\";\n\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { Filter } from './components/Filter/Filter';\nimport { ContactList } from './components/ContactList/ContactList';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('Contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const shortid = require('shortid');\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const searchSameContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (searchSameContact) {\n      toast.error(`Oops.. ${name} is already in your contacts`,\n        { icon: \"⛔\", theme: \"colored\" });\n      return;\n    } else {\n      setContacts(s => [...s, contact]);\n\n      toast.success(`Added`,\n        { icon: \"✔️\", theme: \"colored\" });\n    };\n\n  }\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const findContactByName = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const deleteContact = contactId => {\n    setContacts(state =>\n      state.filter(contact => contact.id !== contactId)\n    );\n\n    toast.warn('Deleted',\n      { icon: \"✔️\", theme: \"colored\" });\n  };\n\n  const visibleContacts = findContactByName();\n\n  return (\n    <div className=\"App\">\n\n      <h1 className=\"title\">Phonebook <FcContacts className=\"titleIcon\" /></h1>\n\n      <ContactForm onSubmit={addContact} />\n\n      <h2 className=\"title\">Contacts <FcConferenceCall className=\"titleIcon\" /></h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n\n      <ToastContainer position=\"top-center\"\n        autoClose={4000}\n        hideProgressBar\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n    const [state, setState] = useState(() => {\r\n        return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n\r\n    return [state, setState];\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Yqk3\",\"item\":\"ContactList_item__3GdLr\",\"contact\":\"ContactList_contact__63pFC\",\"button\":\"ContactList_button__1QXMN\"};"],"sourceRoot":""}